using UnityEngine;

public class PlayerController : MonoBehaviour
{
    public float speed;
    public float jumpForce;
    public float jumpMax;
    public LayerMask layerGround;

    private Rigidbody2D rb;
    private BoxCollider2D bc;
    private bool lookingRight = true;
    private float jumpLeft;

    private void Start()
    {
        rb = GetComponent<Rigidbody2D>();
        bc = GetComponent<BoxCollider2D>();
        jumpLeft = jumpMax;
    }

    // Update is called once per frame
    void Update()
    {
        Movement();
        Jump();
    }

    bool IsGrounded()
    {
        RaycastHit2D raycastHit = Physics2D.BoxCast(bc.bounds.center, new Vector2(bc.bounds.size.x, bc.bounds.size.y), 0f, Vector2.down, 0.2f, layerGround);
        return raycastHit.collider != null;
    }

    void Jump()
    {
        if (IsGrounded())
        {
            jumpLeft = jumpMax;
        }

        if (Input.GetKeyDown(KeyCode.Space) && jumpLeft > 0)
        {
            jumpLeft--;
            rb.velocity = new Vector2(rb.velocity.x, 0f);
            rb.AddForce(Vector2.up * jumpForce, ForceMode2D.Impulse);
        }
    }

    void Movement()
    {
        // Lógica de movimiento
        float inputMovement = Input.GetAxis("Horizontal");

        rb.velocity = new Vector2(inputMovement * speed, rb.velocity.y);

        Orientation(inputMovement);
    }

    void Orientation(float inputMovement)
    {
        // Si se cumple condición
        if ((lookingRight == true && inputMovement < 0) || (lookingRight == false && inputMovement > 0))
        {
            // Ejecutar código de volteado
            lookingRight = !lookingRight;
            transform.localScale = new Vector2(-transform.localScale.x, transform.localScale.y);
        }
    }
}
